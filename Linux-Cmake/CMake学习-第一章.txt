2020-10-15
1、写一个CMake脚本，编译hello_cmake.cpp文件
	# 指定运行此配置文件最低需要的CMake版本
	cmake_minimum_required(VERSION 2.8.5)
	# 指定工程名
	PROJECT (HELLO_CMAKE)
	# 现阶段，你只需要了解 SET 指令可以用来显式的定义变量即可
	# 将 hello_cmake.cpp 赋值给 SRC_LIST 变量，也可以指定多个源文件，用空格隔开
	# SET(SRC_LIST hello_cmake.cpp add.cpp sub.cpp)
	SET(SRC_LIST hello_cmake.cpp)
	# 输出打印构建目录
	MESSAGE(STATUS "This is HELLO_BINARY_DIR " ${HELLO_BINARY_DIR})
	# 输出打印资源目录
	MESSAGE(STATUS "This is HELLO_SOURCE_DIR " ${HELLO_SOURCE_DIR})
	# 输出打印资源目录，与HELLO_SOURCE_DIR 一样 
	MESSAGE(STATUS "This is PROJECT_SOURCE_DIR " ${PROJECT_SOURCE_DIR})
	# 输出打印 CMake 资源目录，与 PROJECT_SOURCE_DIR 一样 
	MESSAGE(STATUS "This is CMAKE_SOURCE_DIR " ${CMAKE_SOURCE_DIR})
	# 生成可执行文件 hello_cmake ，${SRC_LIST}是引用变量，也就是源文件 hello_cmake.cpp
	ADD_EXECUTABLE(hello_cmake ${SRC_LIST})

2、新建hello目录，放置CMakeLists.txt与hello_cmake.cpp文件，然后再新建build目录
	2.1、在build目录下输入cmake .. 备注：cmake是寻找CMakeLists.txt文件并执行的命令，..则是去上一级目录
	2.2、此时在build目录下会生成四个文件，CMakeCache.txt  CMakeFiles  cmake_install.cmake  Makefile
	2.3、然后输入 make，则自动执行Makefile文件，会生成hello_cmake文件，即可执行文件。 
	2.4、输入./hello_cmake即可执行