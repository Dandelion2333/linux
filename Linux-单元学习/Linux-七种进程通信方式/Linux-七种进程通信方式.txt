一、无名管道
	1、特点
		1.1、它本质是一个内核缓冲区。通过头尾两个指针控制写入与读取。所以遵循先进先出规则
		1.2、文件只能被读取一次。因为尾部指针会向前移动。
	2、优点：
		2.1、无
	3、缺点：
		3.1、只能用于亲缘关系的进程，如父子进程间通信
		3.2、内核缓冲区有大小限制。（存在与内存中）		
		
二、有名管道
	1、特点：
		1.1、在磁盘中开辟一块空间，并映射一个路径。只要进程能访问到此路径，都支持通信
	
	2、优点：
		2.1、相对于无名管道而言，不限制进程的关系。
		
	3、缺点：
		3.1、当一个进程往管道中写入数据时，另一个进程必须等待（为什么要等待呢，不等不行吗？）

三、信号
	1、特点：
		1.1、我的理解是一个进程给另一个进程发送信号，通知对方执行相应的操作。例如关机的时候内核给所有的进程发送退出的指令。
		1.2、进程发送信号时不需要考虑接收进程的状态。如何进程处于执行状态，则先在内核中保存。直到接收进程处于非执行状态才接受信号
		1.3、信号可以被设置为阻塞。直到阻塞解除，才能被接收到。
		1.4、Linux系统中常见的信号：
			4.1、SIGHUP：用户从终端注销，所有已启动进程都将收到该进程。系统缺省状态下对该信号的处理是终止进程。
			4.2、SIGINT：程序终止信号。程序运行过程中，按Ctrl+C键将产生该信号。
			4.3、SIGQUIT：程序退出信号。程序运行过程中，按Ctrl+\\键将产生该信号
		1.5、通信方式为异步通信。即发送方发送后就做自己的事情了。（同步方式则是发送后阻塞，直到收到回复信息）
		1.6、信号来源：
			6.1、硬件：如Ctrl+C产生硬件中断信号
			6.2、软件：如kill执行，进程发送的SIGHUP指令。
		1.7、信号的生命周期：
			7.1、进程产生信号，并设置接收进程的地址（PID），然后发送给内核
			7.2、内核接收到信号。根据接收进程的接收方式（是否阻塞该信号）
				2.1、阻塞方式，则信号暂时保存到内核汇中，等待进程解除阻塞后传递给进程
				2.2、非阻塞方式，则信号直接被发送给接收进程
			7.3、接收到信号（此时可以理解信号为中断指令），进程保存上下文（如寄存器的数据，当前执行的状态）后执行信号指令。
					执行完成后恢复上下文，回到执行之前的状态。

	2、优点： 
		2.1、异步通信方式。发送方占资源更小。
		2.2、硬件与软件皆可产生
	
	3、缺点：
		3.1、携带信息量少。通常是一个指令，如关机，kill。
		3.2、假如接收进程设置阻塞，则通信效率低。
		3.3、没有反馈，意味着发送信号后，是否被执行未知。		

四、消息队列
	1、特点：
		1.1、存储位置为内核。除非内核重启，否则数据不会丢失。
		1.2、当一个进程往消息队列写入数据时，不需要其他进程等待。
		1.3、允许多个进程写入与读取数据（不是同时）。
		1.4、它的本质是一个队列。可以按照一定的格式（如一个结构体）读写。也遵循先进先出的原则。
		1.5、Linux目前有两种消息队列，system V与POSIX消息队列。前者用的更多。
		
	2、优点：
		2.1、数据保存的更可靠，相对于无名管道与有名管道而言
		2.2、承载数据量更大，相对于信号而言。
		2.3、支持多个进程读写，效率与实用率更高。
		
	3、缺点：
		3.1、相对于共享内存而言读写效率低一点。

五、共享内存
	1、特点：
		1.1、为了提高通信效率，使用的一块共享内存。相对于（消息队列的方式为，进程A->内存->内核->内存->进程B），减少两次copy
		1.2、需要依靠某种同步机制，实现互斥。（避免同时写入冲突）
		
	2、优点：
		2.1、效率更高
		
	3.、缺点：
		3.1、无 

六、信号量
	需要进一步学习，区分进程信号量与线程的信号量。这里我有点点懵。

七、socket通信
	1、特点：
		1.1、支持不同的主机间进程通信。
		1.2、本质上还是两个进程在通信，通信媒介使用了网络。
		1.3、通信方式建立参考QQ项目
		
	2、优点：
		2.1、不仅仅局限在本机之间的进程。任意两个终端的进程都可以通信。
	
	3、缺点：
		3.1、无
		
		
		
		
		
		
		